---
# tasks file for daac-ansible

- name: Create a k8s namespace
  k8s:
    api_version: project.openshift.io/v1
    kind: Project 
    name: "{{ NAMESPACE }}"
    state: present

- name: create service account
  k8s:
    state: present
    definition: "{{ lookup('template', 'sa.yml') }}"
    validate:
      fail_on_error: yes

# - name: allow anyuid to the robot
#   command: "oc adm policy add-scc-to-user anyuid -z guacrobot"

- name: create RBAC for SA account
  k8s:
    state: present
    definition: "{{ lookup('template', 'rbac-sa.yml') }}"
    validate:
      fail_on_error: yes

- name: Login to KeyCloak
  uri:
    method: POST
    url: "https://sso.{{ OCP_APPS_DOMAIN }}/auth/realms/master/protocol/openid-connect/token"
    validate_certs: no
    body_format: form-urlencoded
    body:
      username: "{{ KEYCLOAK_USER }}"
      password: "{{ KEYCLOAK_PASSWORD }}"
      grant_type: password
      client_id: admin-cli
  register: token

- name: Get Public Key
  uri:
    method: GET
    url: "https://sso.{{ OCP_APPS_DOMAIN }}/auth/realms/master"
    validate_certs: no
    body_format: json    
    headers: 
      Authorization: "bearer {{ token.json.access_token }}"
  register: sso_params        

- name: create configmaps
  k8s:
    state: present
    definition: "{{ lookup('template', item) }}"
    validate:
      fail_on_error: yes
  with_items:
    - 'cfgmap-guac.yml'
    - 'cfgmap-daac-api.yml'
    - 'cfgmap-guac-gk-config.yml'
    - 'cfgmap-daac-gk-config.yml'
    - 'cfgmap-gk-files.yml'
    - 'cfgmap-sso-pubkey.yml'

- name: create secrets
  k8s:
    state: present
    definition: "{{ lookup('template', item) }}"
    validate:
      fail_on_error: yes
  with_items:
    - 'secret-postgres.yml' 

- name: create image streams
  k8s:
    state: present
    definition: "{{ lookup('template', item) }}"
    validate:
      fail_on_error: yes
  with_items: 
    - 'is-daac-api.yml'
    - 'is-gdesk.yml'
    - 'is-guac.yml'
    - 'is-guacd.yml'
    - 'is-gk.yml'

- name: create services
  k8s:
    state: present
    definition: "{{ lookup('template', item) }}"
    validate:
      fail_on_error: yes
  with_items: 
    - 'svc-daac-api.yml'
    - 'svc-guac.yml'
    - 'svc-guacd.yml'
    - 'svc-postgres.yml'

- name: create routes
  k8s:
    state: present
    definition: "{{ lookup('template', item) }}"
    validate:
      fail_on_error: yes
  with_items: 
    - 'route-guac.yml'
    - 'route-daac-api.yml'

- name: create DeploymentConfigs
  k8s:
    state: present
    definition: "{{ lookup('template', item) }}"
    validate:
      fail_on_error: yes
  with_items: 
    - 'dc-daac-api.yml'
    - 'dc-guac.yml'
    - 'dc-guacd.yml'
    - 'dc-postgres.yml'    
