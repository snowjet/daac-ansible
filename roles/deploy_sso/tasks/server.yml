# tasks file for daac-ansible

- name: Create a k8s namespace
  k8s:
    api_version: project.openshift.io/v1
    kind: Project 
    name: "{{ NAMESPACE }}"
    state: present

- name: create configmaps
  k8s:
    state: present
    definition: "{{ lookup('template', item) }}"
    validate:
      fail_on_error: yes
  with_items:
    - 'cfgmap-sso.yml'

- name: create image streams
  k8s:
    state: present
    definition: "{{ lookup('template', item) }}"
    validate:
      fail_on_error: yes
  with_items: 
    - 'is-sso.yml'

- name: create services
  k8s:
    state: present
    definition: "{{ lookup('template', item) }}"
    validate:
      fail_on_error: yes
  with_items: 
    - 'svc-sso.yml'

- name: create routes
  k8s:
    state: present
    definition: "{{ lookup('template', item) }}"
    validate:
      fail_on_error: yes
  with_items: 
    - 'route-sso.yml'

- name: create pvc
  k8s:
    state: present
    definition: "{{ lookup('template', item) }}"
    validate:
      fail_on_error: yes
  with_items: 
    - 'pvc-sso-data.yml'    

- name: create DeploymentConfigs
  k8s:
    state: present
    definition: "{{ lookup('template', item) }}"
    validate:
      fail_on_error: yes
  with_items: 
    - 'dc-sso.yml'

- name: wait for sso to start
  local_action:
    module: uri 
    url: "https://sso.{{ OCP_APPS_DOMAIN }}/auth/realms/master/.well-known/openid-configuration"
    validate_certs: no
  register: result
  until: result.status == 200
  retries: 18
  delay: 10

- name: Create or update Keycloak client
  local_action:
    module: keycloak_client
    auth_client_id: admin-cli
    auth_keycloak_url: "https://sso.{{ OCP_APPS_DOMAIN }}/auth"
    auth_realm: master
    auth_username: "{{ KEYCLOAK_USER }}"
    auth_password: "{{ KEYCLOAK_PASSWORD }}"
    client_id: "{{ SSO_CLIENT_ID }}"
    state: present
    root_url: "https://daac.{{ OCP_APPS_DOMAIN }}/"
    admin_url: "https://daac.{{ OCP_APPS_DOMAIN }}/admin_url"
    enabled: True
    client_authenticator_type: client-secret
    secret: "{{ SSO_CLINET_SECRET }}"
    redirect_uris:
      - "https://guac.{{ OCP_APPS_DOMAIN }}/*"
      - "https://daac.{{ OCP_APPS_DOMAIN }}/*"
    web_origins:
      - "https://guac.{{ OCP_APPS_DOMAIN }}/*"
      - "https://daac.{{ OCP_APPS_DOMAIN }}/*"
    public_client: False
    validate_certs: no
    protocolMappers: 
      - name: audience
        protocol: "openid-connect"
        protocolMapper: "oidc-audience-mapper"
        consentRequired: false
        config: 
          "included.client.audience": "{{ SSO_CLIENT_ID }}"
          "id.token.claim": false
          "access.token.claim": true
      - name: groups
        protocol: "openid-connect"
        protocolMapper: "oidc-group-membership-mapper"
        consentRequired: false
        config: 
          "full.path": false
          "id.token.claim": true
          "access.token.claim": true
          "claim.name": groups
          "userinfo.token.claim": true

- name: Create or update Keycloak client
  local_action:
    module: keycloak_client
    auth_client_id: admin-cli
    auth_keycloak_url: "https://sso.{{ OCP_APPS_DOMAIN }}/auth"
    auth_realm: master
    auth_username: "{{ KEYCLOAK_USER }}"
    auth_password: "{{ KEYCLOAK_PASSWORD }}"
    client_id: guac
    state: present
    root_url: "https://guac.{{ OCP_APPS_DOMAIN }}/"
    admin_url: "https://guac.{{ OCP_APPS_DOMAIN }}/admin_url"
    enabled: True
    client_authenticator_type: client-secret
    secret: "{{ SSO_CLINET_SECRET }}"
    redirect_uris:
      - "https://guac.{{ OCP_APPS_DOMAIN }}/*"
    web_origins:
      - "https://guac.{{ OCP_APPS_DOMAIN }}/*"
    public_client: False
    validate_certs: no
    protocolMappers: 
      - name: audience
        protocol: "openid-connect"
        protocolMapper: "oidc-audience-mapper"
        consentRequired: false
        config: 
          "included.client.audience": guac
          "id.token.claim": false
          "access.token.claim": true
      - name: groups
        protocol: "openid-connect"
        protocolMapper: "oidc-group-membership-mapper"
        consentRequired: false
        config: 
          "full.path": false
          "id.token.claim": true
          "access.token.claim": true
          "claim.name": groups
          "userinfo.token.claim": true          

